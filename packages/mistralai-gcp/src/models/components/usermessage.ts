/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { ClosedEnum } from "../../types/enums.js";
import {
  ContentChunk,
  ContentChunk$inboundSchema,
  ContentChunk$Outbound,
  ContentChunk$outboundSchema,
} from "./contentchunk.js";

export type UserMessageContent = string | Array<ContentChunk>;

export const UserMessageRole = {
  User: "user",
} as const;
export type UserMessageRole = ClosedEnum<typeof UserMessageRole>;

export type UserMessage = {
  content: string | Array<ContentChunk>;
  role?: UserMessageRole | undefined;
};

/** @internal */
export const UserMessageContent$inboundSchema: z.ZodType<
  UserMessageContent,
  z.ZodTypeDef,
  unknown
> = z.union([z.string(), z.array(ContentChunk$inboundSchema)]);

/** @internal */
export type UserMessageContent$Outbound = string | Array<ContentChunk$Outbound>;

/** @internal */
export const UserMessageContent$outboundSchema: z.ZodType<
  UserMessageContent$Outbound,
  z.ZodTypeDef,
  UserMessageContent
> = z.union([z.string(), z.array(ContentChunk$outboundSchema)]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UserMessageContent$ {
  /** @deprecated use `UserMessageContent$inboundSchema` instead. */
  export const inboundSchema = UserMessageContent$inboundSchema;
  /** @deprecated use `UserMessageContent$outboundSchema` instead. */
  export const outboundSchema = UserMessageContent$outboundSchema;
  /** @deprecated use `UserMessageContent$Outbound` instead. */
  export type Outbound = UserMessageContent$Outbound;
}

/** @internal */
export const UserMessageRole$inboundSchema: z.ZodNativeEnum<
  typeof UserMessageRole
> = z.nativeEnum(UserMessageRole);

/** @internal */
export const UserMessageRole$outboundSchema: z.ZodNativeEnum<
  typeof UserMessageRole
> = UserMessageRole$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UserMessageRole$ {
  /** @deprecated use `UserMessageRole$inboundSchema` instead. */
  export const inboundSchema = UserMessageRole$inboundSchema;
  /** @deprecated use `UserMessageRole$outboundSchema` instead. */
  export const outboundSchema = UserMessageRole$outboundSchema;
}

/** @internal */
export const UserMessage$inboundSchema: z.ZodType<
  UserMessage,
  z.ZodTypeDef,
  unknown
> = z.object({
  content: z.union([z.string(), z.array(ContentChunk$inboundSchema)]),
  role: UserMessageRole$inboundSchema.default("user"),
});

/** @internal */
export type UserMessage$Outbound = {
  content: string | Array<ContentChunk$Outbound>;
  role: string;
};

/** @internal */
export const UserMessage$outboundSchema: z.ZodType<
  UserMessage$Outbound,
  z.ZodTypeDef,
  UserMessage
> = z.object({
  content: z.union([z.string(), z.array(ContentChunk$outboundSchema)]),
  role: UserMessageRole$outboundSchema.default("user"),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UserMessage$ {
  /** @deprecated use `UserMessage$inboundSchema` instead. */
  export const inboundSchema = UserMessage$inboundSchema;
  /** @deprecated use `UserMessage$outboundSchema` instead. */
  export const outboundSchema = UserMessage$outboundSchema;
  /** @deprecated use `UserMessage$Outbound` instead. */
  export type Outbound = UserMessage$Outbound;
}

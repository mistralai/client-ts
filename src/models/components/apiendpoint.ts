/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import {
  catchUnrecognizedEnum,
  OpenEnum,
  Unrecognized,
} from "../../types/enums.js";

export const ApiEndpoint = {
  RootV1ChatCompletions: "/v1/chat/completions",
  RootV1Embeddings: "/v1/embeddings",
  RootV1FimCompletions: "/v1/fim/completions",
  RootV1Moderations: "/v1/moderations",
  RootV1ChatModerations: "/v1/chat/moderations",
  RootV1Ocr: "/v1/ocr",
  RootV1Classifications: "/v1/classifications",
  RootV1ChatClassifications: "/v1/chat/classifications",
  RootV1Conversations: "/v1/conversations",
  RootV1AudioTranscriptions: "/v1/audio/transcriptions",
} as const;
export type ApiEndpoint = OpenEnum<typeof ApiEndpoint>;

/** @internal */
export const ApiEndpoint$inboundSchema: z.ZodType<
  ApiEndpoint,
  z.ZodTypeDef,
  unknown
> = z
  .union([
    z.nativeEnum(ApiEndpoint),
    z.string().transform(catchUnrecognizedEnum),
  ]);

/** @internal */
export const ApiEndpoint$outboundSchema: z.ZodType<
  ApiEndpoint,
  z.ZodTypeDef,
  ApiEndpoint
> = z.union([
  z.nativeEnum(ApiEndpoint),
  z.string().and(z.custom<Unrecognized<string>>()),
]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ApiEndpoint$ {
  /** @deprecated use `ApiEndpoint$inboundSchema` instead. */
  export const inboundSchema = ApiEndpoint$inboundSchema;
  /** @deprecated use `ApiEndpoint$outboundSchema` instead. */
  export const outboundSchema = ApiEndpoint$outboundSchema;
}

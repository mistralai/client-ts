/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { ClosedEnum } from "../../types/enums.js";
import { JobOut, JobOut$inboundSchema, JobOut$Outbound, JobOut$outboundSchema } from "./jobout.js";
import * as z from "zod";

export const JobsOutObject = {
    List: "list",
} as const;
export type JobsOutObject = ClosedEnum<typeof JobsOutObject>;

export type JobsOut = {
    data?: Array<JobOut> | undefined;
    object?: "list" | undefined;
    total: number;
};

/** @internal */
export const JobsOutObject$inboundSchema: z.ZodNativeEnum<typeof JobsOutObject> =
    z.nativeEnum(JobsOutObject);

/** @internal */
export const JobsOutObject$outboundSchema: z.ZodNativeEnum<typeof JobsOutObject> =
    JobsOutObject$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace JobsOutObject$ {
    /** @deprecated use `JobsOutObject$inboundSchema` instead. */
    export const inboundSchema = JobsOutObject$inboundSchema;
    /** @deprecated use `JobsOutObject$outboundSchema` instead. */
    export const outboundSchema = JobsOutObject$outboundSchema;
}

/** @internal */
export const JobsOut$inboundSchema: z.ZodType<JobsOut, z.ZodTypeDef, unknown> = z.object({
    data: z.array(JobOut$inboundSchema).optional(),
    object: z.literal("list").default("list"),
    total: z.number().int(),
});

/** @internal */
export type JobsOut$Outbound = {
    data?: Array<JobOut$Outbound> | undefined;
    object: "list";
    total: number;
};

/** @internal */
export const JobsOut$outboundSchema: z.ZodType<JobsOut$Outbound, z.ZodTypeDef, JobsOut> = z.object({
    data: z.array(JobOut$outboundSchema).optional(),
    object: z.literal("list").default("list"),
    total: z.number().int(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace JobsOut$ {
    /** @deprecated use `JobsOut$inboundSchema` instead. */
    export const inboundSchema = JobsOut$inboundSchema;
    /** @deprecated use `JobsOut$outboundSchema` instead. */
    export const outboundSchema = JobsOut$outboundSchema;
    /** @deprecated use `JobsOut$Outbound` instead. */
    export type Outbound = JobsOut$Outbound;
}

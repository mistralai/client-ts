/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { remap as remap$ } from "../../lib/primitives.js";
import * as z from "zod";

export type GithubRepositoryOut = {
    type?: "github" | undefined;
    name: string;
    owner: string;
    ref?: string | null | undefined;
    weight?: number | undefined;
    commitId: string;
};

/** @internal */
export const GithubRepositoryOut$inboundSchema: z.ZodType<
    GithubRepositoryOut,
    z.ZodTypeDef,
    unknown
> = z
    .object({
        type: z.literal("github").default("github"),
        name: z.string(),
        owner: z.string(),
        ref: z.nullable(z.string()).optional(),
        weight: z.number().default(1),
        commit_id: z.string(),
    })
    .transform((v) => {
        return remap$(v, {
            commit_id: "commitId",
        });
    });

/** @internal */
export type GithubRepositoryOut$Outbound = {
    type: "github";
    name: string;
    owner: string;
    ref?: string | null | undefined;
    weight: number;
    commit_id: string;
};

/** @internal */
export const GithubRepositoryOut$outboundSchema: z.ZodType<
    GithubRepositoryOut$Outbound,
    z.ZodTypeDef,
    GithubRepositoryOut
> = z
    .object({
        type: z.literal("github").default("github" as const),
        name: z.string(),
        owner: z.string(),
        ref: z.nullable(z.string()).optional(),
        weight: z.number().default(1),
        commitId: z.string(),
    })
    .transform((v) => {
        return remap$(v, {
            commitId: "commit_id",
        });
    });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GithubRepositoryOut$ {
    /** @deprecated use `GithubRepositoryOut$inboundSchema` instead. */
    export const inboundSchema = GithubRepositoryOut$inboundSchema;
    /** @deprecated use `GithubRepositoryOut$outboundSchema` instead. */
    export const outboundSchema = GithubRepositoryOut$outboundSchema;
    /** @deprecated use `GithubRepositoryOut$Outbound` instead. */
    export type Outbound = GithubRepositoryOut$Outbound;
}

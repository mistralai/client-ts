/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";

export type UnarchiveFTModelOut = {
    id: string;
    object?: "model" | undefined;
    archived?: boolean | undefined;
};

/** @internal */
export const UnarchiveFTModelOut$inboundSchema: z.ZodType<
    UnarchiveFTModelOut,
    z.ZodTypeDef,
    unknown
> = z.object({
    id: z.string(),
    object: z.literal("model").default("model"),
    archived: z.boolean(),
});

/** @internal */
export type UnarchiveFTModelOut$Outbound = {
    id: string;
    object: "model";
    archived: boolean;
};

/** @internal */
export const UnarchiveFTModelOut$outboundSchema: z.ZodType<
    UnarchiveFTModelOut$Outbound,
    z.ZodTypeDef,
    UnarchiveFTModelOut
> = z.object({
    id: z.string(),
    object: z.literal("model").default("model" as const),
    archived: z.boolean().default(false),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UnarchiveFTModelOut$ {
    /** @deprecated use `UnarchiveFTModelOut$inboundSchema` instead. */
    export const inboundSchema = UnarchiveFTModelOut$inboundSchema;
    /** @deprecated use `UnarchiveFTModelOut$outboundSchema` instead. */
    export const outboundSchema = UnarchiveFTModelOut$outboundSchema;
    /** @deprecated use `UnarchiveFTModelOut$Outbound` instead. */
    export type Outbound = UnarchiveFTModelOut$Outbound;
}

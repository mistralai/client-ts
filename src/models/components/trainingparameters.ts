/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";

export type TrainingParameters = {
  trainingSteps?: number | null | undefined;
  learningRate?: number | undefined;
  weightDecay?: number | null | undefined;
  warmupFraction?: number | null | undefined;
  epochs?: number | null | undefined;
  fimRatio?: number | null | undefined;
};

/** @internal */
export const TrainingParameters$inboundSchema: z.ZodType<
  TrainingParameters,
  z.ZodTypeDef,
  unknown
> = z.object({
  training_steps: z.nullable(z.number().int()).optional(),
  learning_rate: z.number().default(0.0001),
  weight_decay: z.nullable(z.number()).optional(),
  warmup_fraction: z.nullable(z.number()).optional(),
  epochs: z.nullable(z.number()).optional(),
  fim_ratio: z.nullable(z.number()).optional(),
}).transform((v) => {
  return remap$(v, {
    "training_steps": "trainingSteps",
    "learning_rate": "learningRate",
    "weight_decay": "weightDecay",
    "warmup_fraction": "warmupFraction",
    "fim_ratio": "fimRatio",
  });
});

/** @internal */
export type TrainingParameters$Outbound = {
  training_steps?: number | null | undefined;
  learning_rate: number;
  weight_decay?: number | null | undefined;
  warmup_fraction?: number | null | undefined;
  epochs?: number | null | undefined;
  fim_ratio?: number | null | undefined;
};

/** @internal */
export const TrainingParameters$outboundSchema: z.ZodType<
  TrainingParameters$Outbound,
  z.ZodTypeDef,
  TrainingParameters
> = z.object({
  trainingSteps: z.nullable(z.number().int()).optional(),
  learningRate: z.number().default(0.0001),
  weightDecay: z.nullable(z.number()).optional(),
  warmupFraction: z.nullable(z.number()).optional(),
  epochs: z.nullable(z.number()).optional(),
  fimRatio: z.nullable(z.number()).optional(),
}).transform((v) => {
  return remap$(v, {
    trainingSteps: "training_steps",
    learningRate: "learning_rate",
    weightDecay: "weight_decay",
    warmupFraction: "warmup_fraction",
    fimRatio: "fim_ratio",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace TrainingParameters$ {
  /** @deprecated use `TrainingParameters$inboundSchema` instead. */
  export const inboundSchema = TrainingParameters$inboundSchema;
  /** @deprecated use `TrainingParameters$outboundSchema` instead. */
  export const outboundSchema = TrainingParameters$outboundSchema;
  /** @deprecated use `TrainingParameters$Outbound` instead. */
  export type Outbound = TrainingParameters$Outbound;
}

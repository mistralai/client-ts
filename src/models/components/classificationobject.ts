/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";

export type ClassificationObject = {
  /**
   * Classifier result thresholded
   */
  categories?: { [k: string]: boolean } | undefined;
  /**
   * Classifier result
   */
  categoryScores?: { [k: string]: number } | undefined;
};

/** @internal */
export const ClassificationObject$inboundSchema: z.ZodType<
  ClassificationObject,
  z.ZodTypeDef,
  unknown
> = z.object({
  categories: z.record(z.boolean()).optional(),
  category_scores: z.record(z.number()).optional(),
}).transform((v) => {
  return remap$(v, {
    "category_scores": "categoryScores",
  });
});

/** @internal */
export type ClassificationObject$Outbound = {
  categories?: { [k: string]: boolean } | undefined;
  category_scores?: { [k: string]: number } | undefined;
};

/** @internal */
export const ClassificationObject$outboundSchema: z.ZodType<
  ClassificationObject$Outbound,
  z.ZodTypeDef,
  ClassificationObject
> = z.object({
  categories: z.record(z.boolean()).optional(),
  categoryScores: z.record(z.number()).optional(),
}).transform((v) => {
  return remap$(v, {
    categoryScores: "category_scores",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ClassificationObject$ {
  /** @deprecated use `ClassificationObject$inboundSchema` instead. */
  export const inboundSchema = ClassificationObject$inboundSchema;
  /** @deprecated use `ClassificationObject$outboundSchema` instead. */
  export const outboundSchema = ClassificationObject$outboundSchema;
  /** @deprecated use `ClassificationObject$Outbound` instead. */
  export type Outbound = ClassificationObject$Outbound;
}
